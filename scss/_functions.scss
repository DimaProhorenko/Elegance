@use 'sass:list';

$prefix: ek-;

@function toRem($val) {
    @return calc($val / 16) + rem;
}

@function tint-color($color, $weight) {
    @return mix(white, $color, $weight * 1%);
}

@function shade-color($color, $weight) {
    @return mix(black, $color, $weight * 1%);
}

@function map-loop($map) {
    $_map: ();

    @each $key, $value in $map {
        $_map: map-merge($value, $_map);
    }  

    @return $_map;
}

@function useCssVar($identifier, $clr, $target) {
    @return var(--#{$prefix + $identifier + -rgb}, $clr);
}

@function toRgb($clr, $args...) {
    @return red($clr), green($clr), blue($clr);
}

// @function createRgbVar($key, $val, $args...) {
//     @return $key: $val;
// }

@function toRgba($clr, $cssVar) {
    @return rgba($clr, var(--#{$prefix + $cssVar}));

}

@function rgba-css-var($clr, $target: text, $useVar: false, $identifier) {

    @if ($useVar) {
        @return rgba(useCssVar($identifier, $clr, $target), var(--#{$prefix + $target + -opacity}));
    }
    
    @return rgba($clr, var(--#{$prefix + $target + -opacity}));
}

@function map-loop($map, $callback, $args...) {
    $_map: ();
    $_args: ();
    $var: if(list.index($args, text), text, bg);

    $useVars: if(list.index($args, useVars), true, null);
    // @each $arg in $args {
    //     $var: if($arg == text, text, bg);
    //     $_args: append($_args, $var);
    // }
    // $_args: append($_args, $useVars);

    @each $key, $value in $map {
        $identifier: if($useVars, $key, null);
        $_map: map-merge($_map, ($key: call(get-function($callback), $value, $var, $useVars, $identifier)))
    }

    // @debug $_map;

    @return $_map;
}

@function map-loop2($map, $callback, $args...) {
    $_map: ();
    $_args: ();
    $var: list.nth($args, 1);
    @debug $var;

    $useVars: if(list.index($args, useVars), true, null);
    // @each $arg in $args {
    //     $var: if($arg == text, text, bg);
    //     $_args: append($_args, $var);
    // }
    // $_args: append($_args, $useVars);

    @each $key, $value in $map {
        $identifier: if($useVars, $key, null);
        $_map: map-merge($_map, ($key: call(get-function($callback), $value, $var, $useVars, $identifier)))
    }

    // @debug $_map;

    @return $_map;
}